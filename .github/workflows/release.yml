name: Build and Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels for Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.14']
        exclude:
          # Python 3.14 may not be available on all platforms
          - os: windows-latest
            python: '3.14'
          - os: macos-latest
            python: '3.14'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        allow-prereleases: true

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools

    - name: Build wheel
      run: |
        python -m build --wheel --outdir dist/

    - name: List built wheels
      shell: bash
      run: |
        ls -lh dist/

    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.os }}-py${{ matrix.python }}
        path: dist/*.whl
        retention-days: 90

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build source distribution
      run: |
        python -m build --sdist --outdir dist/

    - name: List built distributions
      run: |
        ls -lh dist/

    - name: Upload sdist artifact
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz
        retention-days: 90

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/project/fz
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist-artifacts/

    - name: Consolidate artifacts
      run: |
        mkdir -p dist/
        find dist-artifacts/ -type f \( -name '*.whl' -o -name '*.tar.gz' \) -exec cp {} dist/ \;
        ls -lh dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
        verbose: true

  publish-to-github:
    name: Publish to GitHub Releases
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      contents: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist-artifacts/

    - name: Consolidate artifacts
      run: |
        mkdir -p dist/
        find dist-artifacts/ -type f \( -name '*.whl' -o -name '*.tar.gz' \) -exec cp {} dist/ \;
        ls -lh dist/

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
